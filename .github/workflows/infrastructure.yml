name: Terraform CI/CD

on:
  pull_request:
    paths:
      - 'infrastructure/**'
    branches:
      - main 
    types:
      - opened
      - synchronize
      - reopened
      - closed
  issue_comment:
    types: [created]

env:
  PROJECT_ID: branubrain-fs
  REGION: asia-northeast1
  TF_VERSION: "1.6.0"

jobs:
  terraform-plan-prod:
    if: github.event.action != 'closed' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/environments/prod
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan
          terraform show -no-color tfplan > plan_output.txt

      - name: Save Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ github.event.number }}
          path: |
            ./infrastructure/environments/prod/tfplan
            ./infrastructure/environments/prod/plan_output.txt
          retention-days: 30

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./infrastructure/environments/prod/plan_output.txt', 'utf8');
            
            const output = `#### Terraform Plan for PROD Environment üî•
            
            <details><summary>Show Plan</summary>
            
            \`\`\`
            ${planOutput}
            \`\`\`
            
            </details>
            
            **Manual Approval Required** ‚ö†Ô∏è
            
            To apply these changes, comment: \`/terraform apply\`
            
            *Target: \`prod\` environment | Pusher: @${{ github.actor }}*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraform-apply-prod:
    if: |
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '/terraform apply') &&
      (github.event.comment.author_association == 'OWNER' || 
       github.event.comment.author_association == 'MEMBER' || 
       github.event.comment.author_association == 'COLLABORATOR')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/environments/prod
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return {
              head_sha: pr.data.head.sha,
              base_ref: pr.data.base.ref
            };

      - name: Check if PR targets main
        if: fromJSON(steps.pr.outputs.result).base_ref != 'main'
        run: |
          echo "This PR does not target main branch"
          exit 1

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJSON(steps.pr.outputs.result).head_sha }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan-${{ github.event.issue.number }}
          path: ./infrastructure/environments/prod/

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve tfplan

      - name: Comment Apply Result
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const status = '${{ steps.apply.outcome }}' === 'success' ? '‚úÖ SUCCESS' : '‚ùå FAILED';
            const output = `#### Terraform Apply Result: ${status}
            
            **Applied by:** @${{ github.actor }}
            **Environment:** prod
            
            ${status === '‚úÖ SUCCESS' ? 
              'Infrastructure changes have been successfully applied!' : 
              'Apply failed. Please check the logs for details.'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
