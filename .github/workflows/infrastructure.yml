name: Terraform CI/CD

on:
  pull_request:
    paths:
      - 'infrastructure/**'
    branches:
      - main 
      - stg  
      - dev
    types:
      - opened      # PRが作成された時
      - synchronize # PRが更新された時
      - reopened    # PRが再オープンされた時
      - closed      # PRがクローズされた時

env:
  PROJECT_ID: branubrain-fs
  REGION: asia-northeast1
  TF_VERSION: "1.6.0"

jobs:
  # PRでのプランチェック（マージ前）
  terraform-plan-check:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, stg, prod]
    defaults:
      run:
        working-directory: ./infrastructure/environments/${{ matrix.environment }}
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          ENV_NAME=${{ matrix.environment }}
          case $ENV_NAME in
            "dev") ENV_FULL="development" ;;
            "stg") ENV_FULL="staging" ;;
            "prod") ENV_FULL="production" ;;
          esac
          
          terraform plan \
            -var="project_id=$PROJECT_ID" \
            -var="environment=$ENV_FULL" \
            -var="region=$REGION" \
            -no-color

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Terraform Plan for ${{ matrix.environment }} 📖
            
            <details><summary>Show Plan</summary>
            
            \`\`\`
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  # 実際のデプロイ（マージ後）
  terraform-prod:
    if: github.event.pull_request.merged == true && github.base_ref == 'main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/environments/prod
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="project_id=$PROJECT_ID" \
            -var="environment=production" \
            -var="region=$REGION"

  terraform-stg:
    if: github.event.pull_request.merged == true && github.base_ref == 'stg'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/environments/stg
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="project_id=$PROJECT_ID" \
            -var="environment=staging" \
            -var="region=$REGION"

  terraform-dev:
    if: github.event.pull_request.merged == true && github.base_ref == 'dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/environments/dev
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="project_id=$PROJECT_ID" \
            -var="environment=development" \
            -var="region=$REGION"